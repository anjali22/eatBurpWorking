Object.defineProperty(exports, "__esModule", {
   value: true
});

var _react2 = require('react');

var _react3 = _interopRequireDefault(_react2);

var _index = require('./../node_modules/react-transform-hmr/lib/index.js');

var _index2 = _interopRequireDefault(_index);

var _jsxFileName = '/home/anjali/growler-prowler-master/screens/AddRatingScreen.js';

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _reactNative = require('react-native');

var _reactNativeStarRating = require('react-native-star-rating');

var _reactNativeStarRating2 = _interopRequireDefault(_reactNativeStarRating);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var _components = {
   AddRatingScreen: {
      displayName: 'AddRatingScreen'
   }
};

var _node_modulesReactTransformHmrLibIndexJs2 = (0, _index2.default)({
   filename: '/home/anjali/growler-prowler-master/screens/AddRatingScreen.js',
   components: _components,
   locals: [module],
   imports: [_react3.default]
});

function _wrapComponent(id) {
   return function (Component) {
      return _node_modulesReactTransformHmrLibIndexJs2(Component, id);
   };
}

var AddRatingScreen = _wrapComponent('AddRatingScreen')(function (_React$Component) {
   _inherits(AddRatingScreen, _React$Component);

   function AddRatingScreen(props) {
      _classCallCheck(this, AddRatingScreen);

      var _this = _possibleConstructorReturn(this, (AddRatingScreen.__proto__ || Object.getPrototypeOf(AddRatingScreen)).call(this, props));

      _this.state = {
         restaurantName: '',
         review: ''
      };

      _this.handleRestaurantName = function (text) {
         _this.setState({ email: text });
      };

      _this.handleReview = function (text) {
         _this.setState({ password: text });
      };

      _this.login = function (email, pass) {
         alert('email: ' + email + ' password: ' + pass);
      };

      _this.state = {
         starCount: 3.5
      };
      return _this;
   }

   _createClass(AddRatingScreen, [{
      key: 'onStarRatingPress',
      value: function onStarRatingPress(rating) {
         this.setState({
            starCount: rating
         });
      }
   }, {
      key: 'render',
      value: function render() {
         var _this2 = this;

         return _react3.default.createElement(
            _reactNative.View,
            { style: styles.container, __source: {
                  fileName: _jsxFileName,
                  lineNumber: 36
               }
            },
            _react3.default.createElement(_reactNative.TextInput, { style: styles.input,
               underlineColorAndroid: 'transparent',
               placeholder: 'Restaurant Name',
               placeholderTextColor: '#000000',
               autoCapitalize: 'none',
               onChangeText: this.handleRestaurantName, __source: {
                  fileName: _jsxFileName,
                  lineNumber: 37
               }
            }),
            _react3.default.createElement(_reactNative.TextInput, { style: styles.input,
               underlineColorAndroid: 'transparent',
               placeholder: 'Review',
               placeholderTextColor: '#000000',
               autoCapitalize: 'none',
               onChangeText: this.handleReview, __source: {
                  fileName: _jsxFileName,
                  lineNumber: 44
               }
            }),
            _react3.default.createElement(_reactNativeStarRating2.default, {
               disabled: false,
               maxStars: 5,
               rating: this.state.starCount,
               selectedStar: function selectedStar(rating) {
                  return _this2.onStarRatingPress(rating);
               },
               __source: {
                  fileName: _jsxFileName,
                  lineNumber: 51
               }
            }),
            _react3.default.createElement(
               _reactNative.TouchableOpacity,
               {
                  style: styles.submitButton,
                  onPress: function onPress() {
                     return _this2.login(_this2.state.restaurantName, _this2.state.review);
                  }, __source: {
                     fileName: _jsxFileName,
                     lineNumber: 58
                  }
               },
               _react3.default.createElement(
                  _reactNative.Text,
                  { style: styles.submitButtonText, __source: {
                        fileName: _jsxFileName,
                        lineNumber: 63
                     }
                  },
                  ' Add Review '
               )
            )
         );
      }
   }]);

   return AddRatingScreen;
}(_react3.default.Component));

exports.default = AddRatingScreen;


var styles = _reactNative.StyleSheet.create({
   container: {
      paddingTop: 23
   },
   input: {
      margin: 15,
      height: 40,
      borderColor: '#ff8742',
      borderWidth: 1
   },
   submitButton: {
      backgroundColor: '#ff8742',
      padding: 10,
      margin: 15,
      height: 40
   },
   submitButtonText: {
      color: 'white'
   }
});